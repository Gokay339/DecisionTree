import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

from sklearn.tree import DecisionTreeClassifier
import sklearn.tree as tree

from google.colab import files
uploaded = files.upload()

s = pd.read_csv('drug200.csv')
s.head()

s.shape                    # 200 Satır 6 Sütun var

X = s[['Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K']].values
X[0:5]

# SAYISAL VERİLER İÇİN LABEL ENCODER KULLANIYORUZ
from sklearn import preprocessing
le_sex = preprocessing.LabelEncoder()
le_sex.fit(['F','M'])
X[:,1] = le_sex.transform(X[:,1])


le_BP = preprocessing.LabelEncoder()
le_BP.fit([ 'LOW', 'NORMAL', 'HIGH'])
X[:,2] = le_BP.transform(X[:,2])


le_Chol = preprocessing.LabelEncoder()
le_Chol.fit([ 'NORMAL', 'HIGH'])
X[:,3] = le_Chol.transform(X[:,3])

X[0:5]
y = s["Drug"]
y[0:5]

from sklearn.model_selection import train_test_split
X_trainset, X_testset, y_trainset, y_testset = train_test_split(X, y, test_size=0.3, random_state=42)

print('X eğitim setinin şekli {}'.format(X_trainset.shape), '&', 'Y eğitim setinin boyutu {}'.format(y_trainset.shape))
print('X test setinin şekli {}'.format(X_testset.shape), '&', 'y test setinin boyutu {}'.format(y_testset.shape))


drugTree = DecisionTreeClassifier(criterion="entropy", max_depth = 4)
drugTree

drugTree.fit(X_trainset,y_trainset)


predTree = drugTree.predict(X_testset)

print (predTree [0:5])
print (y_testset [0:5])


from sklearn import metrics
import matplotlib.pyplot as plt
print("DecisionTrees'in Doğruluğu:", metrics.accuracy_score(y_testset, predTree))



tree.plot_tree(drugTree)
plt.show()

# Doğruluk Ve Ağaç Resmi
https://prnt.sc/k_hauKxfOE2o


